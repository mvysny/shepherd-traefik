# Runs Shepherd.
#
# Read https://github.com/mvysny/shepherd-traefik for more details.
#
# Prerequisites:
# 1. Installed docker
# 2. Created folder `/var/opt/shepherd`
# 3. Created private network: `docker network create admin.int`

version: '3'

networks:
  admin.int:
    # A network private to the Shepherd administrative tools: Jenkins and Shepherd-java.
    # No hosted app has access to this network.
    # Don't forget to create this network via `docker network create admin.int`
    external: true

services:
  traefik:
    # Reverse-proxy Entry-point for all apps.
    # See https://mvysny.github.io/2-vaadin-apps-1-traefik/
    # The official v3.3.5 Traefik docker image
    image: traefik:latest
    container_name: int_traefik
    command:
      # Enables the web UI and tells Traefik to listen to docker
      # Production: to disable Traefik web api, remove --api.insecure=true
      - --providers.docker
      - --api.insecure=true
      # Enables https :443 entrypoint
      - --entrypoints.https.address=:443
      # No-op certificate resolver by default; configure Traefik's dnsChallenge for wildcard DNS certificates for your DNS vendor.
      # Email address used for registration.
      - --certificatesresolvers.default_shepherd.acme.email=your@email
      # Certificates storage
      - --certificatesresolvers.default_shepherd.acme.storage=/tls-certificates/acme.json
    networks:
      - admin.int
    ports:
      # Debug: The Web UI (enabled by --api.insecure=true). Remove on production.
      - "8080:8080"
      # The 'https' entrypoint
      - "443:443"
    restart: always
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # Traefik DNS certificate storage
      - /var/opt/shepherd/tls-certificates:/tls-certificates
  jenkins:
    # See https://github.com/jenkinsci/docker/blob/master/README.md
    image: jenkins/jenkins:lts
    container_name: int_jenkins
    volumes:
      # All Jenkins data - projects, config, plugins - is stored here
      - /var/opt/shepherd/jenkins_home:/var/jenkins_home
      # So that Jenkins jobs can issue docker commands
      - /var/run/docker.sock:/var/run/docker.sock
      # so that Jenkins can run the `docker` binary and build docker images using the docker-buildx extension.
      # see https://mvysny.github.io/docker-in-docker/
      - /usr/bin/docker:/usr/bin/docker
      - /usr/libexec/docker/cli-plugins/docker-buildx:/usr/libexec/docker/cli-plugins/docker-buildx
      # buildx cache
      - /var/cache/shepherd/docker:/var/cache/shepherd/docker
      # Shepherd-Traefik scripts
      - /opt/shepherd-traefik:/opt/shepherd-traefik
    group_add:
      - 125  # docker group id; obtain the correct GID of the `docker` group by running `getent group docker`.
    networks:
      - admin.int
    labels:
      - "traefik.http.routers.admin_jenkins.entrypoints=https"
      - "traefik.http.routers.admin_jenkins.tls=true"
      - "traefik.http.routers.admin_jenkins.rule=Host(`jenkins.admin.mydomain.me`)"
    restart: always
    environment:
      - "JAVA_OPTS=-Djava.awt.headless=true -Xmx512m"
  shepherd:
    image: mvysny/shepherd-java:latest
    container_name: int_shepherd
    volumes:
      # Shepherd config file
      - /etc/shepherd:/etc/shepherd
      # So that Shepherd can issue docker commands
      - /var/run/docker.sock:/var/run/docker.sock
      # so that Jenkins can run the `docker` binary and build docker images using the docker-buildx extension.
      # see https://mvysny.github.io/docker-in-docker/
      - /usr/bin/docker:/usr/bin/docker
    networks:
      - admin.int
    labels:
      - "traefik.http.routers.admin_shepherd.entrypoints=https"
      - "traefik.http.routers.admin_shepherd.tls=true"
      - "traefik.http.routers.admin_shepherd.rule=Host(`admin.mydomain.me`)"
    restart: always
