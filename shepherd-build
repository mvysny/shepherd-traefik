#!/bin/bash
set -e -o pipefail

PROJECT_ID="$1"
#
# Builds the project as a Docker image and runs it as a Docker container. Intended
# to be called from CI (Jenkins) after the project's source git repo has been updated.
# The CWD must point to the project being built.
#
# Accepts parameters:
# - the project id, e.g. vaadin-boot-example-gradle
#
# Accepts the following env variables:
# - BUILD_MEMORY: (optional) how much memory the build image will get. Defaults to 2048m
# - CPU_QUOTA: (optional) CPU quota for the build, defaults to 200000 for 2 CPU cores.
# - BUILD_ARGS: (optional) for example add `export BUILD_ARGS='--build-arg offlinekey="foo"'
# - DOCKERFILE: (optional) alternative name of the Dockerfile file
# - RUNTIME_MEMORY: (optional) how much memory the running container will get. Defaults to 256m
#
# Prerequisites:
# - A docker network named PROJECT_ID.shepherd, created and connected to Traefik;
#   see `docker network create` and `docker network connect` for more info.

if [[ -z "${PROJECT_ID}" ]]; then
  echo "project_id missing; should be e.g. vaadin-boot-example-gradle"
  echo
  echo "Use: $0 project_id"
  exit 1
fi
# the Project ID must:
#
# * contain at most 54 characters
# * contain only lowercase alphanumeric characters or '-'
# * start with an alphanumeric character
# * end with an alphanumeric character
#
if ! [[ $PROJECT_ID =~ ^[a-z0-9][a-z0-9\-]{0,52}[a-z0-9]$ ]]; then
  echo "$PROJECT_ID is not a valid project ID"
  exit 1
fi

BUILD_MEMORY="${BUILD_MEMORY:-2048m}"
CPU_QUOTA="${CPU_QUOTA:-200000}"
IMAGE="shepherd/${PROJECT_ID}"
DOCKERFILE="${DOCKERFILE:-Dockerfile}"

# 1. build new docker image.
# optionally, add build args via
#
# export BUILD_ARGS='--build-arg offlinekey="foo"'
#
# Then, add the following to your `Dockerfile`: `ARG offlinekey`; `ENV VAADIN_OFFLINE_KEY=$offlinekey`
# Uses 2 CPUs per build to speed things up.
echo "Building image $IMAGE"
docker build --cache-from "type=local,src=/var/cache/shepherd/docker/$PROJECT_ID" \
  --cache-to "type=local,dest=/var/cache/shepherd/docker/$PROJECT_ID" \
  -f "$DOCKERFILE" \
  -t "$IMAGE:latest" \
  -m "$BUILD_MEMORY" --cpu-period 100000 --cpu-quota "$CPU_QUOTA" \
  $BUILD_ARGS .

# 2. restart the docker container
# We'll use shepherd-cli available in the int_shepherd container to restart the project containers.
docker exec -ti -w /opt/shepherd-cli/bin int_shepherd ./shepherd-cli restart "$PROJECT_ID"
